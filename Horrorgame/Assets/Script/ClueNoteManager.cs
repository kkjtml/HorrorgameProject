using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class ClueNoteManager : MonoBehaviour
{
    public static ClueNoteManager Instance;

    public GameObject clueUIPanel;   // UI ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ
    public GameObject clueObjectInWorld; // ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏à‡∏£‡∏¥‡∏á
    private bool isShowing = false;

    private void Awake()
    {
        if (Instance == null) Instance = this;
        else Destroy(gameObject);
    }

    void Start()
    {
        if (clueUIPanel != null)
            clueUIPanel.SetActive(false);
    }

    void Update()
    {
        if (isShowing && Mouse.current.rightButton.wasPressedThisFrame)
        {
            CloseClue();
        }
    }

    public void ShowClue()
    {
        if (isShowing) return;

        Debug.Log("üìù Showing Clue UI");

        isShowing = true;
        StartCoroutine(ShowClueDelayed());
    }

    private IEnumerator ShowClueDelayed()
    {
        yield return null; // ‡∏£‡∏≠ 1 frame ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ UI ‡πÇ‡∏´‡∏•‡∏î

        clueUIPanel.SetActive(true);

        if (clueObjectInWorld != null)
            clueObjectInWorld.SetActive(false); // ‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

        // üîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        StarterAssets.ThirdPersonController player = FindObjectOfType<StarterAssets.ThirdPersonController>();
        if (player != null) player.enabled = false;
    }

    void CloseClue()
    {
        clueUIPanel.SetActive(false);
        isShowing = false;

        // ‚úÖ ‡∏Ñ‡∏∑‡∏ô object ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
        if (clueObjectInWorld != null)
            clueObjectInWorld.SetActive(true);

        // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏ß‡∏™‡πÑ‡∏î‡πâ
        LanternManager.Instance.nextLanternIndex = 0;

        StarterAssets.ThirdPersonController player = FindObjectOfType<StarterAssets.ThirdPersonController>();
        if (player != null) player.enabled = true;
    }

    public bool IsClueShowing() => isShowing;
}